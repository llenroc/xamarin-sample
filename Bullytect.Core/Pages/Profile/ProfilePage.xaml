<?xml version="1.0" encoding="UTF-8"?>
<common:BaseContentPage 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:utils="clr-namespace:Bullytect.Core.Utils;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:common="clr-namespace:Bullytect.Core.Pages.Common"
    xmlns:commonControls="clr-namespace:Bullytect.Core.Pages.Common.Controls"
    xmlns:extended="clr-namespace:Bullytect.Core.Pages.Common.Extended"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:xfg="clr-namespace:XFGloss;assembly=XFGloss"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:behaviors="clr-namespace:Behaviors;assembly=Behaviors"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
    xmlns:rest="clr-namespace:Bullytect.Core.Rest.Utils"
    x:Class="Bullytect.Core.Pages.Profile.ProfilePage"
    x:TypeArguments="viewModels:ProfileViewModel"
    Title="{i18n:Translate Page.Profile.Title}"
    BackgroundColor="{DynamicResource BasePageColor}">
    <ContentPage.Resources>
           <ResourceDictionary>
                <converters:ContainsKeyVisibilityConverter x:Key="ContainsKeyVisibilityConverter"/>
                <converters:ValidationErrorFormatValueConverter x:Key="ValidationErrorFormatValueConverter"/>
                <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
                <converters:TailStringConverter x:Key="TailStringConverter"/>
                <converters:DefaultReactiveUnitConverter x:Key="DefaultReactiveUnitConverter" />
                <converters:ParentProfileImageURLConverter x:Key="ParentProfileImageURLConverter" />
          
                <x:String x:Key="firstNameKey">firstName</x:String>
                <x:String x:Key="lastNameKey">lastName</x:String>
                <x:String x:Key="birthdateKey">birthdate</x:String>
                <x:String x:Key="emailValidationKey">email</x:String>
                <x:String x:Key="telephoneKey">telephone</x:String>
            </ResourceDictionary>
    </ContentPage.Resources>


    <ContentPage.Behaviors>
        <behaviors:EventHandlerBehavior EventName="Appearing">
            <behaviors:InvokeCommandAction 
                    Command="{ Binding RefreshCommand }" 
                    Converter="{ StaticResource DefaultReactiveUnitConverter }" />
        </behaviors:EventHandlerBehavior>
    </ContentPage.Behaviors>
    
	<ContentPage.Content>
    
        <!-- MAIN CONTAINER -->
        <Grid RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- APP Header -->
            <common:AppHeader 
                Grid.Row="0"
                Title="{i18n:Translate Page.Profile.Title}">
                <common:AppHeader.Options>
                    <x:Array Type="{x:Type View}">

                        <!-- Refresh Menu Option -->

                        <common:MenuOption
                            Icon="{ x:Static helper:FontAwesomeFont.Refresh }"
                            ClickedItemCommand="{ Binding RefreshCommand }">

                            <common:MenuOption.Triggers>
                                <DataTrigger
                                    TargetType="common:MenuOption"
                                    Binding="{Binding IsBusy}"
                                    Value="True">
                                   <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                                <DataTrigger
                                    TargetType="common:MenuOption"
                                    Binding="{Binding ErrorOccurred}"
                                    Value="False">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </common:MenuOption.Triggers>

                        </common:MenuOption>

                        <!-- End Refresh Menu Option -->

                        <!-- SignOut Menu Option -->

                        <common:MenuOption
                            Icon="{ x:Static helper:FontAwesomeFont.SignOut }"
                            ClickedItemCommand="{ Binding SignOutCommand }" />

                        <!-- End SignOut Menu Option -->
                    </x:Array>
                </common:AppHeader.Options>
            </common:AppHeader>

            <Grid
                Grid.Row="1"
                Padding="20"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <common:ActivityLoading
                       Grid.Row="0"
                       IsLoading="{ Binding IsBusy }"
                       LoadingText="{ Binding LoadingText }"
                       Icon="{ x:Static helper:FontAwesomeFont.UserO }"
                       HorizontalOptions="Center" 
                       VerticalOptions="FillAndExpand"/>


                <ScrollView 
                    Grid.Row="0"
                    IsVisible="{ Binding IsBusy, Converter = { StaticResource InverseBoolConverter }}"
                    VerticalOptions="StartAndExpand" >

                    <!-- Profile Image Section -->
                     <StackLayout 
                            HorizontalOptions="FillAndExpand"
                            VerticalOptions="StartAndExpand"
                            Spacing="10">

                          <StackLayout Padding="5">

                            <Label
                                LineBreakMode="WordWrap"
                                Text="{i18n:Translate Profile.Image.Section}"
                                TextColor="{ DynamicResource AccentColor }"
                                VerticalTextAlignment="Center"
                                FontSize="17">
                              <Label.FontSize>
                                <OnIdiom
                                    x:TypeArguments="x:Double"
                                    Phone="17"
                                    Tablet="27"/>
                              </Label.FontSize>
                            </Label>

                            <BoxView
                                Style="{StaticResource LargeBrandNameOrnamentStyle}"
                                BackgroundColor="{DynamicResource AccentColor}"
                                Margin="10, 0"/>

                          </StackLayout>


                          <StackLayout Orientation="Horizontal" Spacing="10">

                                    <!-- AVATAR -->
                                    <ffimageloading:CachedImage   
                                        x:Name="profileImage"
                                        WidthRequest="70"
                                        HeightRequest="70"
                                        CacheType="Disk"
                                        CacheDuration="30"
                                        ErrorPlaceholder="{ StaticResource ProfileErrorImage }"
                                        LoadingPlaceholder="{ StaticResource ProfileImagePlaceholder }"
                                        Source="{ Binding SelfParent.ProfileImage , Converter={ StaticResource ParentProfileImageURLConverter } }">
                                        <ffimageloading:CachedImage.Transformations>
                                            <fftransformations:CircleTransformation BorderSize="5" BorderHexColor="#6BC7E0" />
                                        </ffimageloading:CachedImage.Transformations>
                                    </ffimageloading:CachedImage>

                                    <Label
                                        LineBreakMode="WordWrap"
                                        Text="{i18n:Translate Profile.Image.Change}"
                                        TextColor="{ DynamicResource AccentColor }"
                                        VerticalTextAlignment="Center"
                                        FontSize="17">
                                      <Label.FontSize>
                                        <OnIdiom
                                            x:TypeArguments="x:Double"
                                            Phone="17"
                                            Tablet="27"/>
                                      </Label.FontSize>
                                    </Label>

                                    <StackLayout.GestureRecognizers>
                                      <TapGestureRecognizer Command="{ Binding TakePhotoCommand }"  NumberOfTapsRequired="1" />
                                    </StackLayout.GestureRecognizers>
                            
                          </StackLayout>

                          <StackLayout Padding="5">

                            <Label
                                LineBreakMode="WordWrap"
                                Text="{i18n:Translate Profile.General.Information.Section}"
                                TextColor="{ DynamicResource AccentColor }"
                                VerticalTextAlignment="Center"
                                FontSize="17">
                              <Label.FontSize>
                                <OnIdiom
                                    x:TypeArguments="x:Double"
                                    Phone="17"
                                    Tablet="27"/>
                              </Label.FontSize>
                            </Label>

                            <BoxView
                                Style="{StaticResource LargeBrandNameOrnamentStyle}"
                                BackgroundColor="{DynamicResource AccentColor}"
                                Margin="10, 0"/>

                          </StackLayout>

                            <!-- Firstname -->
                            <StackLayout>

                                <Entry
                                    Placeholder="{ i18n:Translate Common.Placeholder.Firstname }"
                                    VerticalOptions="StartAndExpand"
                                    Style="{StaticResource ArtinaProfileEntryStyle}" 
                                    Text="{ Binding SelfParent.FirstName }" />

                                 <Label
                                    Text="{Binding Path=FieldErrors,        
                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                    ConverterParameter={StaticResource firstNameKey}}"
                                    IsVisible="{Binding Path=FieldErrors,   
                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                    ConverterParameter={StaticResource firstNameKey}}"
                                    Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                            </StackLayout>

                            <!-- lastname -->
                            <StackLayout>

                                <Entry 
                                    Placeholder="{ i18n:Translate Common.Placeholder.LastName }"
                                    Style="{StaticResource ArtinaProfileEntryStyle}" 
                                    Text="{ Binding SelfParent.LastName }"/>

                                <Label
                                    Text="{Binding Path=FieldErrors,        
                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                    ConverterParameter={StaticResource lastNameKey}}"
                                    IsVisible="{Binding Path=FieldErrors,          
                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                    ConverterParameter={StaticResource lastNameKey}}"
                                    Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                            </StackLayout>

                            <!-- email -->
                            <StackLayout>

                                <Entry 
                                    Placeholder="{ i18n:Translate Common.Placeholder.Email }"
                                    Style="{StaticResource ArtinaProfileEntryStyle}"
                                    Keyboard="Email"
                                    Text="{ Binding SelfParent.Email }">
                                    <Entry.Behaviors>
                                        <artina:EmailValidatorBehavior x:Name="emailValidator" />
                                    </Entry.Behaviors>
                                </Entry>

                                <Label
                                    Text="{ i18n:Translate Signup.Account.Email.Invalid } " 
                                    IsVisible="false"
                                    Style="{StaticResource ValidationEntryErrorStyle}">

                                    <Label.Triggers>
                                        <DataTrigger 
                                            TargetType="Label"
                                            Binding="{Binding Source={x:Reference emailValidator}, Path=IsValid}"
                                            Value="false">
                                            <Setter Property="IsVisible" Value="true" />
                                        </DataTrigger> 
                                    </Label.Triggers>
                                </Label>

                                <Label
                                    Text="{Binding Path=FieldErrors,       
                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                    ConverterParameter={StaticResource emailValidationKey}}"
                                    IsVisible="{Binding Path=FieldErrors,   
                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                    ConverterParameter={StaticResource emailValidationKey}}"
                                    Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                            </StackLayout>

                            <!-- Birthdate -->
                            <StackLayout>

                              <DatePicker 
                                    VerticalOptions="CenterAndExpand" 
                                    Date="{ Binding SelfParent.Birthdate }"
                                    artina:PickerProperties.BorderStyle="BottomLine" 
                                    artina:PickerProperties.BorderColor="{ DynamicResource AccentColor }" 
                                    artina:PickerProperties.BorderWidth="1"
                                    TextColor="White">
                                    <DatePicker.Format>dd-MM-yyyy</DatePicker.Format>
                                    <DatePicker.MinimumDate>
                                           <sys:DateTime x:FactoryMethod="Parse">
                                               <x:Arguments>
                                                  <x:String>1-1-1961</x:String>
                                               </x:Arguments>
                                            </sys:DateTime>
                                        </DatePicker.MinimumDate>
                                        <DatePicker.MaximumDate>
                                            <sys:DateTime x:FactoryMethod="Parse">
                                                <x:Arguments>
                                                  <x:String>1-1-2000</x:String>
                                                 </x:Arguments>
                                                </sys:DateTime>
                                        </DatePicker.MaximumDate>
                                </DatePicker>
                               
                                <Label
                                    Text="{Binding Path=FieldErrors,       
                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                    ConverterParameter={StaticResource birthdateKey}}"
                                    IsVisible="{Binding Path=FieldErrors,   
                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                    ConverterParameter={StaticResource birthdateKey}}"
                                    Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                            </StackLayout>

                            <!-- Telephone -->
                            <StackLayout>
                                <StackLayout Orientation="Horizontal" HorizontalOptions="StartAndExpand">
                                    <Label 
                                        HorizontalOptions="Start"
                                        Text="{Binding SelfParent.PhonePrefix, StringFormat='{0} |'}"
                                        BackgroundColor="Transparent"
                                        VerticalTextAlignment="Center"/>
                                     <Entry 
                                        HorizontalOptions="StartAndExpand"
                                        Placeholder="{ i18n:Translate Common.Placeholder.Telephone }"  
                                        Text="{ Binding SelfParent.PhoneNumber }" 
                                        Keyboard="Telephone" 
                                        WidthRequest="150"
                                        Style="{StaticResource ArtinaProfileEntryStyle}">
                                    </Entry>
                                </StackLayout>

                                <Label
                                    Text="{Binding Path=FieldErrors, 
                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                    ConverterParameter={StaticResource telephoneKey}}"
                                    IsVisible="{Binding Path=FieldErrors,
                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                    ConverterParameter={StaticResource telephoneKey}}"
                                    Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                                  
                                </StackLayout>
                                <!-- End Telephone -->
                            
                         
                          </StackLayout>

                    </ScrollView>
                
                    <StackLayout 
                        Grid.Row="1"
                        Orientation="Vertical" 
                        VerticalOptions="End">
                  
                      <artina:Button
                        Style="{StaticResource SaveButtonStyle}"
                        Command="{ Binding SaveChangesCommand }"
                        Text="{i18n:Translate Profile.Save.Changes}" >
                        
                        <Button.Triggers>
                          <DataTrigger
                              TargetType="Button"
                              Binding="{Binding IsBusy}"
                              Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                          </DataTrigger>
                          <DataTrigger
                            TargetType="Button"
                            Binding="{Binding HaveInternet}"
                            Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                          </DataTrigger>
                        </Button.Triggers>
                      </artina:Button>
                      
                      <artina:Button 
                        IsEnabled="{Binding HaveInternet}"
                        Style="{StaticResource DeleteButtonStyle}"
                        Command="{ Binding DeleteAccountCommand }"
                        Text="{i18n:Translate Profile.Delete.Account}">

                                    <Button.Triggers>
                                        <DataTrigger 
                                            TargetType="Button"
                                            Binding="{Binding IsBusy}"
                                            Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger 
                                            TargetType="Button"
                                            Binding="{Binding HaveInternet}"
                                            Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Button.Triggers>
                      </artina:Button>
                    </StackLayout>

                    <Grid.Triggers>
                        <DataTrigger
                            TargetType="Grid"
                            Binding="{Binding DataFound}"
                            Value="False">
                          <Setter Property="IsVisible" Value="False" />
                       </DataTrigger>
                       <DataTrigger
                            TargetType="Grid"
                            Binding="{Binding ErrorOccurred}"
                            Value="True">
                          <Setter Property="IsVisible" Value="False" />
                       </DataTrigger>
                   </Grid.Triggers>

            </Grid>            


          <common:NoDataFound
              Grid.Row="1"
              IsVisible="{Binding DataFound, Converter={StaticResource InverseBoolConverter}}"
              MainText="{i18n:Translate Children.Not.Found.MainText}"
              DetailText="{i18n:Translate Profile.Data.Not.Found}"/>

          <common:ErrorOcurred
              Grid.Row="1"
              IsVisible="false"
              MainText="{i18n:Translate Profile.Updating.Error}">
              <ContentView.Triggers>
                    <MultiTrigger TargetType="common:ErrorOcurred">
                        <MultiTrigger.Conditions>
                          <BindingCondition 
                              Binding="{ Binding ErrorOccurred }"
                              Value="True" />
                          <BindingCondition 
                              Binding="{Binding IsBusy }"
                              Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="True" />
                    </MultiTrigger>
               </ContentView.Triggers>
          </common:ErrorOcurred>

        </Grid>
	</ContentPage.Content>
</common:BaseContentPage>
