<?xml version="1.0" encoding="UTF-8"?>
<d:MvxContentPage 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:d="clr-namespace:MvvmCross.Forms.Core;assembly=MvvmCross.Forms"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:utils="clr-namespace:Bullytect.Core.Utils;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:common="clr-namespace:Bullytect.Core.Pages.Common"
    xmlns:extended="clr-namespace:Bullytect.Core.Pages.Common.Extended"
    xmlns:templates="clr-namespace:Bullytect.Core.Pages.Profile.Template"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:xfg="clr-namespace:XFGloss;assembly=XFGloss"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:controls="clr-namespace:Refractored.XamForms.PullToRefresh;assembly=Refractored.XamForms.PullToRefresh"
    x:Class="Bullytect.Core.Pages.Profile.ProfilePage"
    x:TypeArguments="viewModels:ProfileViewModel"
    Title="{i18n:Translate Page.Profile.Title}"
    BackgroundColor="{DynamicResource BasePageColor}">
    <ContentPage.Resources>
           <ResourceDictionary>
                <converters:ContainsKeyVisibilityConverter x:Key="ContainsKeyVisibilityConverter"/>
                <converters:ValidationErrorFormatValueConverter x:Key="ValidationErrorFormatValueConverter"/>
                <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
                <converters:TailStringConverter x:Key="TailStringConverter"/>
            
                <x:String x:Key="firstNameKey">firstName</x:String>
                <x:String x:Key="lastNameKey">lastName</x:String>
                <x:String x:Key="birthdateKey">birthdate</x:String>
                <x:String x:Key="emailValidationKey">email</x:String>
                <x:String x:Key="telephoneKey">telephone</x:String>
            </ResourceDictionary>
    </ContentPage.Resources>
	<ContentPage.Content>
    
        <!-- MAIN CONTAINER -->
        <Grid RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- CUSTOM NAVBAR -->
            <templates:ProfileHeader Grid.Row="0"/>

            <controls:PullToRefreshLayout
                Grid.Row="1"
                x:Name="RefreshLayout"
                IsPullToRefreshEnabled="{ Binding IsBusy, Converter={StaticResource InverseBoolConverter}}"
                RefreshCommand="{Binding LoadProfileCommand}"
                IsRefreshing="{Binding IsBusy}"
                RefreshColor="{DynamicResource BasePageColor}"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand">

              <StackLayout
                  Padding="20,10">

                <ScrollView VerticalOptions="StartAndExpand">
                    <!-- Profile Image Section -->
                    <StackLayout 
                        HorizontalOptions="FillAndExpand"
                        VerticalOptions="StartAndExpand"
                        Spacing="10">

                      <StackLayout Padding="5">

                        <Label
                            LineBreakMode="WordWrap"
                            Text="{i18n:Translate Profile.Image.Section}"
                            TextColor="{ DynamicResource AccentColor }"
                            VerticalTextAlignment="Center"
                            FontSize="27">
                          <Label.FontSize>
                            <OnIdiom
                                x:TypeArguments="x:Double"
                                Phone="27"
                                Tablet="37"/>
                          </Label.FontSize>
                        </Label>

                        <BoxView
                            Style="{StaticResource BrandNameOrnamentStyle}"
                            BackgroundColor="{DynamicResource AccentColor}"
                            Margin="10, 0"/>

                      </StackLayout>


                      <StackLayout Orientation="Horizontal" Spacing="10">

                        <!-- AVATAR -->
                        <artina:CircleImage
                            BorderThickness="5"
                            BorderColor="{ DynamicResource AccentColor }"
                            Source="user_profile_1.jpg"
                            WidthRequest="100"
                            HeightRequest="100"/>

                        <Label
                            LineBreakMode="WordWrap"
                            Text="{i18n:Translate Profile.Image.Change}"
                            TextColor="{ DynamicResource AccentColor }"
                            VerticalTextAlignment="Center"
                            FontSize="19">
                          <Label.FontSize>
                            <OnIdiom
                                x:TypeArguments="x:Double"
                                Phone="19"
                                Tablet="22"/>
                          </Label.FontSize>
                        </Label>

                        <StackLayout.GestureRecognizers>
                          <TapGestureRecognizer Command="{ Binding TakePhotoCommand }"  NumberOfTapsRequired="1" />
                        </StackLayout.GestureRecognizers>
                        
                      </StackLayout>

                      <StackLayout Padding="5">

                        <Label
                            LineBreakMode="WordWrap"
                            Text="{i18n:Translate Profile.General.Information.Section}"
                            TextColor="{ DynamicResource AccentColor }"
                            VerticalTextAlignment="Center"
                            FontSize="27">
                          <Label.FontSize>
                            <OnIdiom
                                x:TypeArguments="x:Double"
                                Phone="27"
                                Tablet="37"/>
                          </Label.FontSize>
                        </Label>

                        <BoxView
                            Style="{StaticResource BrandNameOrnamentStyle}"
                            BackgroundColor="{DynamicResource AccentColor}"
                            Margin="10, 0"/>

                      </StackLayout>

                        <!-- Firstname -->
                        <StackLayout>

                            <Entry
                                Placeholder="{ i18n:Translate Common.Placeholder.Firstname }"
                                VerticalOptions="StartAndExpand"
                                Style="{StaticResource ArtinaProfileEntryStyle}" 
                                Text="{ Binding SelfParent.FirstName }" />

                             <Label
                                Text="{Binding Path=FieldErrors,        
                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                ConverterParameter={StaticResource firstNameKey}}"
                                IsVisible="{Binding Path=FieldErrors,   
                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                ConverterParameter={StaticResource firstNameKey}}"
                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                        </StackLayout>

                        <!-- lastname -->
                        <StackLayout>

                            <Entry 
                                Placeholder="{ i18n:Translate Common.Placeholder.LastName }"
                                Style="{StaticResource ArtinaProfileEntryStyle}" 
                                Text="{ Binding SelfParent.LastName }"/>

                            <Label
                                Text="{Binding Path=FieldErrors,        
                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                ConverterParameter={StaticResource lastNameKey}}"
                                IsVisible="{Binding Path=FieldErrors,          
                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                ConverterParameter={StaticResource lastNameKey}}"
                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                        </StackLayout>

                        <!-- email -->
                        <StackLayout>

                            <Entry 
                                Placeholder="{ i18n:Translate Common.Placeholder.Email }"
                                Style="{StaticResource ArtinaProfileEntryStyle}" 
                                Text="{ Binding SelfParent.Email }">
                                <Entry.Behaviors>
                                    <artina:EmailValidatorBehavior x:Name="emailValidator" />
                                </Entry.Behaviors>
                            </Entry>

                            <Label
                                Text="{ i18n:Translate Signup.Account.Email.Invalid } " 
                                IsVisible="false"
                                Style="{StaticResource ValidationEntryErrorStyle}">

                                <Label.Triggers>
                                    <DataTrigger 
                                        TargetType="Label"
                                        Binding="{Binding Source={x:Reference emailValidator}, Path=IsValid}"
                                        Value="false">
                                        <Setter Property="IsVisible" Value="true" />
                                    </DataTrigger> 
                                </Label.Triggers>
                            </Label>

                            <Label
                                Text="{Binding Path=FieldErrors,       
                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                ConverterParameter={StaticResource emailValidationKey}}"
                                IsVisible="{Binding Path=FieldErrors,   
                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                ConverterParameter={StaticResource emailValidationKey}}"
                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                        </StackLayout>

                        <!-- Birthdate -->
                        <StackLayout>
                            <DatePicker 
                                VerticalOptions="CenterAndExpand" 
                                Date="{ Binding SelfParent.Birthdate }"
                                >
                                <DatePicker.Format>yyyy-MM-dd</DatePicker.Format>
                                <DatePicker.MinimumDate>
                                    <sys:DateTime x:FactoryMethod="Parse">
                                        <x:Arguments>
                                            <x:String>Jan 1 1970</x:String>
                                        </x:Arguments>
                                    </sys:DateTime>
                                </DatePicker.MinimumDate>
                                <DatePicker.MaximumDate>
                                    <sys:DateTime x:FactoryMethod="Parse">
                                        <x:Arguments>
                                            <x:String>Dec 31 2050</x:String>
                                        </x:Arguments>
                                    </sys:DateTime>
                                </DatePicker.MaximumDate>
                            </DatePicker>

                            <Label
                                Text="{Binding Path=FieldErrors,       
                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                ConverterParameter={StaticResource birthdateKey}}"
                                IsVisible="{Binding Path=FieldErrors,   
                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                ConverterParameter={StaticResource birthdateKey}}"
                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                        </StackLayout>

                        <!-- Telephone -->
                        <!--<StackLayout>

                            <StackLayout Orientation="Horizontal">

                                <Label Text="{Binding Prefix, StringFormat='{0} |'}" 
                                    TextColor="#fff"
                                    BackgroundColor="Transparent"
                                    VerticalTextAlignment="Center"/>
                                    <Entry 
                                        Placeholder="{ i18n:Translate Common.Placeholder.Telephone }" 
                                        Text="{ Binding Telephone, Converter={ StaticResource TailStringConverter}, ConverterParameter=4 }" 
                                        Keyboard="Telephone" 
                                        Style="{StaticResource ArtinaProfileEntryStyle}">
                                    </Entry>
                             </StackLayout>

                             <Label
                                Text="{Binding Path=FieldErrors, 
                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                ConverterParameter={StaticResource telephoneKey}}"
                                IsVisible="{Binding Path=FieldErrors,
                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                ConverterParameter={StaticResource telephoneKey}}"
                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                        </StackLayout>-->
                        <!-- End Telephone -->
                        

                      </StackLayout>

                </ScrollView>
                
                <StackLayout Orientation="Vertical" VerticalOptions="End">
                  
                  <artina:Button
                    Style="{StaticResource SaveButtonStyle}"
                    Command="{ Binding SaveChangesCommand }"
                    Text="{i18n:Translate Profile.Save.Changes}" >
                    
                    <Button.Triggers>
                      <DataTrigger
                          TargetType="Button"
                          Binding="{Binding IsBusy}"
                          Value="True">
                        <Setter Property="IsEnabled" Value="False" />
                      </DataTrigger>
                      <DataTrigger
                        TargetType="Button"
                        Binding="{Binding HaveInternet}"
                        Value="False">
                        <Setter Property="IsEnabled" Value="False" />
                      </DataTrigger>
                    </Button.Triggers>
                  </artina:Button>
                  
                  <artina:Button 
                    IsEnabled="{Binding HaveInternet}"
                    Style="{StaticResource DeleteButtonStyle}"
                    Command="{ Binding DeleteAccountCommand }"
                    Text="{i18n:Translate Profile.Delete.Account}">

                                <Button.Triggers>
                                    <DataTrigger 
                                        TargetType="Button"
                                        Binding="{Binding IsBusy}"
                                        Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                    <DataTrigger 
                                        TargetType="Button"
                                        Binding="{Binding HaveInternet}"
                                        Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Button.Triggers>
                  </artina:Button>
                </StackLayout>

              

             </StackLayout>

             <controls:PullToRefreshLayout.Triggers>
                <DataTrigger
                    TargetType="controls:PullToRefreshLayout"
                    Binding="{Binding DataFound}"
                    Value="False">
                  <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
                <DataTrigger
                    TargetType="controls:PullToRefreshLayout"
                    Binding="{Binding ErrorOccurred}"
                    Value="True">
                  <Setter Property="IsVisible" Value="False" />
                </DataTrigger>
              </controls:PullToRefreshLayout.Triggers>
              
                
         </controls:PullToRefreshLayout>

          <common:NoDataFound
              Grid.Row="1"
              IsVisible="{Binding DataFound, Converter={StaticResource InverseBoolConverter}}"
              MainText="{i18n:Translate Children.Not.Found.MainText}"
              DetailText="{i18n:Translate Profile.Data.Not.Found}"/>

          <common:ErrorOcurred
               Grid.Row="1"
              IsVisible="{ Binding ErrorOccurred }"
              MainText="{i18n:Translate Profile.Updating.Error}"/>

        </Grid>
	</ContentPage.Content>
</d:MvxContentPage>
