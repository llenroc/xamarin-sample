<?xml version="1.0" encoding="UTF-8"?>
<d:MvxContentPage 
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:d="clr-namespace:MvvmCross.Forms.Core;assembly=MvvmCross.Forms"
    x:Class="Bullytect.Core.Pages.Signup.SignupPage"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    x:TypeArguments="viewModels:SignupViewModel"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    x:Name="root"
    Title="{i18n:Translate Page.Common.Title}">
    <ContentPage.Resources>
           <ResourceDictionary>
                <converters:ContainsKeyVisibilityConverter x:Key="ContainsKeyVisibilityConverter"/>
                <converters:ValidationErrorFormatValueConverter x:Key="ValidationErrorFormatValueConverter"/>
                <x:String x:Key="emailValidationKey">email</x:String>
                <x:String x:Key="firstNameKey">firstName</x:String>
                <x:String x:Key="lastNameKey">lastName</x:String>
                <x:String x:Key="birthdateKey">birthdate</x:String>
                <x:String x:Key="passwordClearKey">passwordClear</x:String>
                <x:String x:Key="confirmPasswordKey">confirmPassword</x:String>
                <x:String x:Key="telephoneKey">telephone</x:String>
            </ResourceDictionary>
    </ContentPage.Resources>
	<ContentView.Content>

        <Grid>
            <!---BACKGROUND IMAGE-->
            <Image Style="{StaticResource SignUpBackgroundImage}"/>

            <!-- MAIN CONTAINER -->
            <Grid
                ColumnSpacing="0" 
                RowSpacing="0" 
                HorizontalOptions="Fill"
                VerticalOptions="FillAndExpand" >

                <Grid.RowDefinitions>
                    <RowDefinition Height="120" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- LOGO -->
                <Image 
                        Grid.Row="0"
                        Source="Icon_76.png"
                        WidthRequest="60"
                        HeightRequest="60"
                        Margin="20"
                        VerticalOptions="End"
                        HorizontalOptions="Start" />


               <Label
                    Grid.Row="0"
                    Style="{ StaticResource IconCloseLabelStyle }" 
                    HorizontalOptions="End"
                    VerticalOptions="Start"
                    TranslationX="-20"
                    TranslationY="35">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{ Binding CloseCommand }" NumberOfTapsRequired="1"/>
                        </Label.GestureRecognizers>
                </Label>


                <!--CLAIM TEXT-->
                <StackLayout
                   Grid.Row="1"
                   Spacing="10"
                   Padding="20,10"
                   Orientation="Vertical"
                   VerticalOptions="Center">
                        
                   <Label
                        LineBreakMode="WordWrap"
                        Text="{i18n:Translate Signup.Title.Main}"
                        TextColor="{ DynamicResource OverImageTextColor }"
                        VerticalTextAlignment="Center"
                        FontAttributes="Bold"
                        AbsoluteLayout.LayoutFlags="All">
                        <Label.FontSize> 
                            <OnIdiom
                                x:TypeArguments="x:Double"
                                Phone="26"
                                Tablet="36"/>
                        </Label.FontSize>
                    </Label>

                    <Label
                        LineBreakMode="WordWrap"
                        Text="{i18n:Translate Signup.Title.Second}"
                        TextColor="{ DynamicResource OverImageTextColor }"
                        VerticalTextAlignment="Center"
                        FontSize="36"
                        AbsoluteLayout.LayoutFlags="All">
                        <Label.FontSize> 
                            <OnIdiom 
                                x:TypeArguments="x:Double"
                                Phone="17"
                                Tablet="27"/>
                        </Label.FontSize>
                    </Label>

                    <BoxView 
                        Style="{StaticResource BrandNameOrnamentStyle}"
                        BackgroundColor="{DynamicResource OverImageTextColor}"/>
                </StackLayout>

                <ScrollView Grid.Row="2" Padding="{ StaticResource MainWrapperPadding }">

                    <!---FIELDS CONTAINER-->
                    <StackLayout
                        Padding="40,0"
                        VerticalOptions="CenterAndExpand">

                            <!-- First Name FIELD-->
                            <StackLayout>

                                <Entry
                                    Placeholder="{ i18n:Translate Common.Placeholder.Firstname }"
                                    Style="{StaticResource ArtinaLoginEntryStyle}" 
                                    VerticalOptions="StartAndExpand"
                                    Text="{ Binding FirstName }"/>

                                <Label
                                        Text="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                                    ConverterParameter={StaticResource firstNameKey}}"
                                         IsVisible="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                                    ConverterParameter={StaticResource firstNameKey}}"
                                         Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                            </StackLayout>
                            <!-- End First Name FIELD-->

                            <!-- Last Name FIELD-->
                            <StackLayout>

                            
                                <Entry 
                                    Placeholder="{ i18n:Translate Common.Placeholder.LastName }"
                                    Style="{StaticResource ArtinaLoginEntryStyle}" 
                                    Text="{ Binding LastName }"/>


                                <Label
                                        Text="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                                    ConverterParameter={StaticResource lastNameKey}}"
                                         IsVisible="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                                    ConverterParameter={StaticResource lastNameKey}}"
                                         Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                            </StackLayout>
                            <!-- End Last Name FIELD-->

                            <!-- Birthday FIELD-->
                            <StackLayout>
                                <DatePicker 
                                    VerticalOptions="CenterAndExpand" 
                                    Date="{ Binding Birthdate }"
                                     >
                                    <DatePicker.Format>yyyy-MM-dd</DatePicker.Format>
                                    <DatePicker.MinimumDate>
                                       <sys:DateTime x:FactoryMethod="Parse">
                                           <x:Arguments>
                                              <x:String>Jan 1 1970</x:String>
                                           </x:Arguments>
                                        </sys:DateTime>
                                    </DatePicker.MinimumDate>
                                    <DatePicker.MaximumDate>
                                        <sys:DateTime x:FactoryMethod="Parse">
                                            <x:Arguments>
                                              <x:String>Dec 31 2050</x:String>
                                             </x:Arguments>
                                            </sys:DateTime>
                                    </DatePicker.MaximumDate>
                                </DatePicker>


                                <Label
                                        Text="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                                    ConverterParameter={StaticResource birthdateKey}}"
                                         IsVisible="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                                    ConverterParameter={StaticResource birthdateKey}}"
                                         Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                            </StackLayout>
                            <!-- End Birthday FIELD-->
                            
                            <!-- Email FIELD-->
                            <StackLayout>

                                <Entry 
                                    Placeholder="{ i18n:Translate Common.Placeholder.Email }"
                                    Style="{StaticResource ArtinaLoginEntryStyle}"
                                    Text="{ Binding Email }">
                                    <Entry.Behaviors>
                                        <artina:EmailValidatorBehavior x:Name="emailValidator" />
                                    </Entry.Behaviors>
                                 </Entry>

                                 <Label
                                    Text="{ i18n:Translate Signup.Account.Email.Invalid } " IsVisible="false"
                                    Style="{StaticResource ValidationEntryErrorStyle}">
                                    <Label.Triggers>
                                        <DataTrigger 
                                            TargetType="Label"
                                            Binding="{Binding Source={x:Reference emailValidator}, Path=IsValid}"
                                            Value="false">
                                            <Setter Property="IsVisible" Value="true" />
                                        </DataTrigger> 
                                    </Label.Triggers>
                                   </Label>

                                   <Label
                                        Text="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ValidationErrorFormatValueConverter},
                                                    ConverterParameter={StaticResource emailValidationKey}}"
                                         IsVisible="{Binding Path=FieldErrors,                            
                                                    Converter={StaticResource ContainsKeyVisibilityConverter},
                                                    ConverterParameter={StaticResource emailValidationKey}}"
                                         Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                                    
                               </StackLayout>
                               <!-- End Email FIELD-->

                                <!-- Password FIELD -->
                                <StackLayout>

                                        <Entry 
                                            x:Name="passwordEntry"
                                            Placeholder="{ i18n:Translate Common.Placeholder.Password }"
                                            IsPassword="true"
                                            Style="{StaticResource ArtinaLoginEntryStyle}" 
                                            Text="{ Binding PasswordClear }"
                                            VerticalOptions="StartAndExpand"/>


                                        <Label
                                            Text="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ValidationErrorFormatValueConverter},
                                                        ConverterParameter={StaticResource passwordClearKey}}"
                                             IsVisible="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ContainsKeyVisibilityConverter},
                                                        ConverterParameter={StaticResource passwordClearKey}}"
                                             Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                                </StackLayout>
                                <!-- End Password FIELD -->
                            
                                <!-- Confirm Password -->
                                <StackLayout
                                        VerticalOptions="StartAndExpand" >

                                        <Entry 
                                            Placeholder="{ i18n:Translate Common.Placeholder.ConfirmPassword }" 
                                            IsPassword="true"
                                            Style="{StaticResource ArtinaLoginEntryStyle}"
                                            Text="{ Binding ConfirmPassword }">
                                            <Entry.Behaviors>
                                                <artina:TextMatchValidatorBehavior x:Name="passwordValidator" 
                                                    TextToMatch="{Binding Source={x:Reference passwordEntry}, Path=Text}"/>
                                            </Entry.Behaviors>
                                        </Entry>

                                        <Label
                                            Text="{ i18n:Translate Signup.Account.Password.Not.Match } " IsVisible="false"
                                            Style="{StaticResource ValidationEntryErrorStyle}">

                                            <Label.Triggers>
                                                <DataTrigger 
                                                    TargetType="Label"
                                                    Binding="{Binding Source={x:Reference passwordValidator}, Path=IsValid}"
                                                    Value="false">
                                                    <Setter Property="IsVisible" Value="true" />
                                                </DataTrigger> 
                                            </Label.Triggers>

                                        </Label>

                                        <Label
                                            Text="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ValidationErrorFormatValueConverter},
                                                        ConverterParameter={StaticResource confirmPasswordKey}}"
                                             IsVisible="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ContainsKeyVisibilityConverter},
                                                        ConverterParameter={StaticResource confirmPasswordKey}}"
                                             Style="{StaticResource ValidationEntryErrorStyle}"></Label>

                                        
                                  </StackLayout>
                                  <!-- End Confirm Password -->
                            
                                  <!-- Telephone -->
                                  <StackLayout>
                                      <StackLayout Orientation="Horizontal">
                                            
                                             <Label Text="{Binding Prefix, StringFormat='{0} |'}" 
                                                    TextColor="#fff" 
                                                    BackgroundColor="Transparent"
                                                    VerticalTextAlignment="Center"/>
                                             <Entry 
                                                    Placeholder="{ i18n:Translate Common.Placeholder.Telephone }" 
                                                    Text="{ Binding Telephone }" 
                                                    Keyboard="Telephone" 
                                                    Style="{StaticResource ArtinaLoginEntryStyle}">
                                            </Entry>
                                      </StackLayout>

                                      <Label
                                            Text="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ValidationErrorFormatValueConverter},
                                                        ConverterParameter={StaticResource telephoneKey}}"
                                             IsVisible="{Binding Path=FieldErrors,                            
                                                        Converter={StaticResource ContainsKeyVisibilityConverter},
                                                        ConverterParameter={StaticResource telephoneKey}}"
                                             Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                                  </StackLayout>
                                <!-- End Telephone -->
                        </StackLayout>


                    </ScrollView>

                    <!-- FOOTER -->
                    <StackLayout
                        HorizontalOptions="Fill"
                        VerticalOptions="End" 
                        Padding="20, 0"
                        Grid.Row="3" >

                        <artina:Button
                            IsEnabled="{Binding HaveInternet}"
                            Style="{StaticResource PrimaryActionButtonStyle}"
                            VerticalOptions="End"
                            Text="{i18n:Translate Signup.Create}"
                            Command="{ Binding SignupCommand }"
                            WidthRequest="{ artina:OnOrientationDouble
                                    LandscapePhone=200,
                                    LandscapeTablet=400 }"
                            HorizontalOptions="{ artina:OnOrientationLayoutOptions
                                    PortraitPhone=Fill,
                                    LandscapePhone=Center,
                                    PortraitTablet=Fill,
                                    LandscapeTablet=Center }"/>

                        <artina:Button
                            Style="{StaticResource TransparentButtonStyle}"
                            VerticalOptions="End"
                            Text="{i18n:Translate Signup.Alredy.User}"
                            Command="{ Binding GoToLoginCommand }"
                            WidthRequest="{ artina:OnOrientationDouble
                                    LandscapePhone=200,
                                    LandscapeTablet=400 }"
                            HorizontalOptions="{ artina:OnOrientationLayoutOptions
                                    PortraitPhone=Fill,
                                    LandscapePhone=Center,
                                    PortraitTablet=Fill,
                                    LandscapeTablet=Center }"/>

                        </StackLayout>
                </Grid>
           </Grid>
	</ContentView.Content>
</d:MvxContentPage>
