<?xml version="1.0" encoding="UTF-8"?>
<common:BaseContentPage  
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:utils="clr-namespace:Bullytect.Core.Utils;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:commonTemplates="clr-namespace:Bullytect.Core.Pages.Common.Templates"
    xmlns:commonControls="clr-namespace:Bullytect.Core.Pages.Common.Controls"
    xmlns:templates="clr-namespace:Bullytect.Core.Pages.Home.Templates"
    xmlns:common="clr-namespace:Bullytect.Core.Pages.Common"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
    xmlns:behaviors="clr-namespace:Behaviors;assembly=Behaviors"
    xmlns:rest="clr-namespace:Bullytect.Core.Rest.Utils"
    xmlns:config="clr-namespace:Bullytect.Core.Config"
    xmlns:controls="clr-namespace:Refractored.XamForms.PullToRefresh;assembly=Refractored.XamForms.PullToRefresh"
    x:Class="Bullytect.Core.Pages.Home.HomePage"
    x:TypeArguments="viewModels:HomeViewModel"
    Title="{i18n:Translate Page.Common.Title}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converters:ItemTappedEventArgsConverter x:Key="ItemTappedEventArgsConverter"/>
            <converters:ValueEqualToZeroConverter x:Key="ValueEqualToZeroConverter" />
            <converters:DefaultReactiveUnitConverter x:Key="DefaultReactiveUnitConverter" />
            <converters:ValueGreaterThanZeroConverter x:Key="ValueGreaterThanZeroConverter" />
            <converters:ParentProfileImageURLConverter x:Key="ParentProfileImageURLConverter" />
            <converters:ItemToIndexConverter x:Key="ItemToIndexConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Refresh On Appearing Event -->
    <ContentPage.Behaviors>
        <behaviors:EventHandlerBehavior EventName="Appearing" >
            <behaviors:InvokeCommandAction 
                    Command="{Binding RefreshCommand}" 
                    Converter="{ StaticResource DefaultReactiveUnitConverter}" />
        </behaviors:EventHandlerBehavior>
    </ContentPage.Behaviors>
    
	<ContentPage.Content>
        <!-- MAIN CONTAINER -->
        <Grid RowSpacing="0">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- APP Header -->
            <common:AppHeader 
                Grid.Row="0"
                Title="{i18n:Translate Page.Home.Title}"
                BackEnable="false">
                <common:AppHeader.Options>
                    <x:Array Type="{x:Type View}">
                        <common:RefreshOptionMenu />
                        <common:SettingsOptionMenu />
                        <common:SignOutOptionMenu />
                    </x:Array>
                </common:AppHeader.Options>

            </common:AppHeader>
            <!-- End APP Header -->

            <controls:PullToRefreshLayout
               Grid.Row="1"
               x:Name="RefreshLayout"
               IsVisible="{ Binding ErrorOccurred, Converter={StaticResource InverseBoolConverter} }"
               IsPullToRefreshEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}"
               RefreshCommand="{Binding RefreshCommand}"
               IsRefreshing="{Binding IsBusy}"
               RefreshColor="{DynamicResource AccentColor}"
               HorizontalOptions="FillAndExpand"
               VerticalOptions="FillAndExpand">
                
                <!--GRID WRAPPER-->
                <Grid 
                     Padding="0" 
                     IsVisible="{ Binding ErrorOccurred , Converter = { StaticResource InverseBoolConverter }  }">

                     <Grid.RowDefinitions>
                          <RowDefinition Height="250" />
                          <RowDefinition Height="*" />
                     </Grid.RowDefinitions>


                    <!-- PROFILE HEADER-->
                    <Grid 
                        Grid.Row="0"
                        Padding="0">


                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                            <!-- BACKGROUND IMAGE -->
                            <Image 
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Source="{ StaticResource HomeBackground }"
                                IsOpaque="false"
                                Aspect="AspectFill"
                                HorizontalOptions="FillAndExpand"/>

                            <StackLayout
                                Grid.Row="0"
                                HorizontalOptions="FillAndExpand">

                                <Grid 
                                    HorizontalOptions="Center"
                                    VerticalOptions="Center"
                                    TranslationY="25">

                                    <!-- AVATAR -->
                                    <ffimageloading:CachedImage
                                        x:Name="profileImage"
                                        CacheType="Disk"
                                        CacheDuration="30"
                                        WidthRequest="100"
                                        HeightRequest="100"
                                        FadeAnimationEnabled="true"
                                        ErrorPlaceholder="{ StaticResource ProfileErrorImage }"
                                        LoadingPlaceholder="{ StaticResource ProfileImagePlaceholder }"
                                        Source="{ Binding SelfParent.ProfileImage , Converter={ StaticResource ParentProfileImageURLConverter } }">
                                        <ffimageloading:CachedImage.Transformations>
                                             <fftransformations:CircleTransformation BorderSize="5" BorderHexColor="#FFFFFF" />
                                        </ffimageloading:CachedImage.Transformations>
                                     </ffimageloading:CachedImage>

                                      <!-- BADGE -->
                                      <common:Badge
                                        IsVisible="{ Binding  AlertsPage.Remaining, Converter={ StaticResource ValueGreaterThanZeroConverter }}"
                                        BadgeText="{ Binding  AlertsPage.Remaining, StringFormat='+ {0}'}"
                                        BadgeTextColor="{ DynamicResource InverseTextColor }"
                                        BadgeBackgroundColor="#22c064"
                                        HorizontalOptions="Center"
                                        VerticalOptions="Start"
                                        TranslationX="40">

                                        <common:Badge.GestureRecognizers>
                                            <TapGestureRecognizer Command="{ Binding GoToAlertsCommand }" NumberOfTapsRequired="1" /> 
                                        </common:Badge.GestureRecognizers>

                                    </common:Badge>

                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{ Binding TakePhotoCommand }"  NumberOfTapsRequired="1" />
                                    </Grid.GestureRecognizers>
                                </Grid>

                                <!-- Parent FullName -->
                                <StackLayout
                                    Orientation="Horizontal"
                                    HorizontalOptions="CenterAndExpand"
                                    Padding="20">

                                    <Label 
                                        HorizontalOptions="CenterAndExpand"
                                        Text="{Binding SelfParent.FullName}"
                                        TextColor="{ DynamicResource OverImageTextColor }"
                                        HorizontalTextAlignment="Center"
                                        FontAttributes="Bold"
                                        FontSize="{ artina:OnOrientationDouble
                                            PortraitPhone=22,
                                            LandscapePhone=22,
                                            PortraitTablet=24,
                                            LandscapeTablet=24 }"  />
                                </StackLayout>
                            </StackLayout>

                            <!-- TOOLBAR -->
                            <Grid
                                x:Name="Toolbar"
                                Grid.Row="1"
                                Style="{ StaticResource ToolbarStyle }"
                                BackgroundColor="{ DynamicResource TranslucidWhite }">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>


                                <!-- Children Action -->
                                <StackLayout
                                    Grid.Column="0"
                                    Orientation="Horizontal"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="Center"
                                    Spacing="0">

                                    <Label
                                        VerticalTextAlignment="Center"
                                        HorizontalTextAlignment="Center"
                                        Text="{ x:Static helper:FontAwesomeFont.Users }"
                                        FontFamily="{ StaticResource IconsFontFamily }"
                                        TextColor="{ DynamicResource InverseTextColor }">

                                        <Label.FontSize>
                                            <OnIdiom 
                                                x:TypeArguments="x:Double" 
                                                Phone="15" 
                                                Tablet="20" />
                                        </Label.FontSize>
                                    </Label>

                                    <Label
                                        VerticalTextAlignment="Center"
                                        HorizontalTextAlignment="Center"
                                        Text="{Binding SelfParent.Children, StringFormat={i18n:Translate Home.Toolbar.Children} }"
                                        TextColor="{ DynamicResource OverImageTextColor }">
                                        <Label.FontSize>
                                            <OnIdiom 
                                                x:TypeArguments="x:Double" 
                                                Phone="15" 
                                                Tablet="20" />
                                        </Label.FontSize> 
                                    </Label>

                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Command="{ Binding GoToChildrenCommand }" NumberOfTapsRequired="1" /> 
                                    </StackLayout.GestureRecognizers>
                                 </StackLayout>

                                   <!-- IsEnabled="{ Binding SelfParent.Children, Converter={ StaticResource ValueGreaterThanZeroConverter }}" -->
                                  <!-- Results Action -->
                                  <StackLayout
                                    Grid.Column="1"
                                    Orientation="Horizontal"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="Center"
                                    Spacing="0">

                                        <Label
                                            VerticalTextAlignment="Center"
                                            HorizontalTextAlignment="Center"
                                            Text="{ x:Static helper:FontAwesomeFont.AreaChart }"
                                            FontFamily="{ StaticResource IconsFontFamily }"
                                            TextColor="{ DynamicResource InverseTextColor }">
                                            <Label.FontSize>
                                                <OnIdiom 
                                                    x:TypeArguments="x:Double" 
                                                    Phone="15" 
                                                    Tablet="20" />
                                             </Label.FontSize> 
                                         </Label>

                                          <Label
                                            VerticalTextAlignment="Center" 
                                            HorizontalTextAlignment="Center"
                                            Text="{i18n:Translate Home.Toolbar.Results}"
                                            TextColor="{ DynamicResource OverImageTextColor }">

                                            <Label.FontSize>
                                                <OnIdiom 
                                                    x:TypeArguments="x:Double" 
                                                    Phone="15"
                                                    Tablet="20" />
                                             </Label.FontSize> 
                                        </Label>

                                        <StackLayout.GestureRecognizers>
                                            <TapGestureRecognizer Command="{ Binding GoToResultsCommand}" NumberOfTapsRequired="1" /> 
                                        </StackLayout.GestureRecognizers>
                                </StackLayout>

                                <!-- Profile Action -->
                                <StackLayout
                                    Grid.Column="2"
                                    Orientation="Horizontal"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="Center"
                                    Spacing="0">

                                        <Label
                                            VerticalTextAlignment="Center" 
                                            HorizontalTextAlignment="Center"
                                            Text="{ x:Static helper:FontAwesomeFont.User }"
                                            FontFamily="{ StaticResource IconsFontFamily }"
                                            TextColor="{ DynamicResource InverseTextColor }">
                                            <Label.FontSize>
                                                <OnIdiom 
                                                    x:TypeArguments="x:Double" 
                                                    Phone="15" 
                                                    Tablet="20" />
                                            </Label.FontSize> 
                                        </Label>

                                        <Label
                                            VerticalTextAlignment="Center" 
                                            HorizontalTextAlignment="Center"
                                            Text="{i18n:Translate Home.Toolbar.Profile}"
                                            TextColor="{ DynamicResource OverImageTextColor }">
                                            <Label.FontSize>
                                                <OnIdiom 
                                                    x:TypeArguments="x:Double" 
                                                    Phone="15" 
                                                    Tablet="20" />
                                            </Label.FontSize> 
                                        </Label>

                                        <StackLayout.GestureRecognizers>
                                            <TapGestureRecognizer Command="{ Binding GoToProfileCommand }" NumberOfTapsRequired="1" /> 
                                        </StackLayout.GestureRecognizers>
                                   </StackLayout>
                                </Grid>

                    </Grid>
                    <!-- END PROFILE HEADER-->

                    <!-- ALTERNATES BODIES -->

                    <common:ActivityLoading
                        Grid.Row="1"
                        Icon="{ x:Static helper:FontAwesomeFont.Bell }"
                        IsLoading="{ Binding IsBusy }"
                        LoadingText="{i18n:Translate Common.Loading}"/>

                    <!-- No Alerts Found -->
                    <common:NoDataFound
                        Grid.Row="1"
                        IsVisible="{ Binding ShouldShowNoAlertsFound }"
                        MainText="{i18n:Translate Home.Alerts.Not.Found.MainText }"
                        DetailText="{i18n:Translate Home.Alerts.Not.Found.SecondText }">
                    </common:NoDataFound>

                     <!-- No Children Found -->

                    <templates:NoChildrenFound
                        Grid.Row="1"
                        IsVisible="{ Binding ShouldShowNoChildrenFound}"
                        VerticalOptions="CenterAndExpand"
                        Padding="20" />

                    <!-- END ALTERNATES BODIES -->

                    <!-- BODY -->
                    <Grid 
                        x:Name="AlertsBody"
                        BackgroundColor="White"
                        Grid.Row="1"
                        Padding="0">

                        <Grid.RowDefinitions>
                          <RowDefinition Height="50" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackLayout
                            Grid.Row="0"
                            VerticalOptions="CenterAndExpand"
                            Orientation="Horizontal">

                            <StackLayout  
                                Orientation="Horizontal"
                                HorizontalOptions="StartAndExpand">

                                <Label
                                    FontSize="18"
                                    Style="{ StaticResource CommonHeaderStyle }"
                                    Text="{ x:Static helper:FontAwesomeFont.Inbox }"
                                    FontFamily="{ StaticResource IconsFontFamily }" />

                                <Label
                                    Style="{ StaticResource CommonHeaderStyle }"
                                    LineBreakMode="TailTruncation"
                                    Text="{ Binding ListAlertTitle }"/>
                            </StackLayout>

                            <StackLayout
                                Orientation="Horizontal"
                                HorizontalOptions="End">

                                <Label
                                    FontSize="14"
                                    VerticalTextAlignment="Center"
                                    Text="{ i18n:Translate Home.Show.Alerts }"/>

                                <Label
                                    Text="{ x:Static helper:FontAwesomeFont.ArrowRight }"
                                    VerticalTextAlignment="Center"
                                    Margin="5,0,5,0"
                                    FontFamily="{ StaticResource IconsFontFamily }" />

                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{ Binding GoToAlertsCommand }" NumberOfTapsRequired="1" /> 
                                </StackLayout.GestureRecognizers>
                            </StackLayout>
                            
                        </StackLayout>

                        <!-- Last Alerts LIST -->
                        <ListView
                            Grid.Row="1"
                            x:Name="AlertsListView"
                            ItemsSource="{Binding AlertsPage.Alerts}"
                            RowHeight="90">

                            <ListView.Behaviors>
                                <utils:EventToCommandBehavior 
                                    EventName="ItemTapped"
                                    Command="{Binding ShowAlertDetailCommand}"
                                    EventArgsConverter="{ StaticResource ItemTappedEventArgsConverter }" />
                            </ListView.Behaviors>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <commonControls:SearchPageViewCellWithId 
                                        FirstApper="SearchPageViewCellWithId_OnFirstApper"
                                        FirstDisapp="SearchPageViewCellWithId_OnFirstDisapp" 
                                        ItemId="{ Binding .,
                                        Converter = { StaticResource ItemToIndexConverter },
                                        ConverterParameter = { x:Reference AlertsListView } }">
                                        <templates:AlertItemTemplate/>
                                   </commonControls:SearchPageViewCellWithId>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Grid.Triggers>
                            <DataTrigger 
                                TargetType="Grid"
                                Binding="{Binding AlertsPage.Returned, Converter={ StaticResource ValueEqualToZeroConverter } }"
                                Value="True">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                            <DataTrigger
                                TargetType="Grid"
                                Binding="{Binding IsBusy}"
                                Value="True">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </Grid.Triggers>

                    </Grid>
                    <!-- END BODY -->
                </Grid>
                <!--END GRID WRAPPER-->
             </controls:PullToRefreshLayout>

            <common:ErrorOcurred 
                    Grid.Row="1"
                    IsVisible="{ Binding ErrorOccurred }"
                    MainText="{i18n:Translate Home.Profile.Load.Error}"/>
        </Grid>
       <!-- END MAIN CONTAINER -->
    </ContentPage.Content>
</common:BaseContentPage>

