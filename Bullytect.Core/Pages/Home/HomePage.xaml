<?xml version="1.0" encoding="UTF-8"?>
<common:BaseContentPage  
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:utils="clr-namespace:Bullytect.Core.Utils;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:commonTemplates="clr-namespace:Bullytect.Core.Pages.Common.Templates"
    xmlns:commonControls="clr-namespace:Bullytect.Core.Pages.Common.Controls"
    xmlns:templates="clr-namespace:Bullytect.Core.Pages.Home.Templates"
    xmlns:common="clr-namespace:Bullytect.Core.Pages.Common"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:ffimageloading="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
    xmlns:fftransformations="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
    xmlns:behaviors="clr-namespace:Behaviors;assembly=Behaviors"
    xmlns:rest="clr-namespace:Bullytect.Core.Rest.Utils"
    xmlns:config="clr-namespace:Bullytect.Core.Config"
    x:Class="Bullytect.Core.Pages.Home.HomePage"
    x:TypeArguments="viewModels:HomeViewModel"
    Title="{i18n:Translate Page.Common.Title}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:NullVisibilityConverter x:Key="NullToVisibilityConverter"/>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converters:ItemTappedEventArgsConverter x:Key="ItemTappedEventArgsConverter"/>
            <converters:ValueEqualToZeroConverter x:Key="ValueEqualToZeroConverter" />
            <converters:DefaultReactiveUnitConverter x:Key="DefaultReactiveUnitConverter" />
            <converters:ValueGreaterThanZeroConverter x:Key="ValueGreaterThanZeroConverter" />
            <converters:ParentProfileImageURLConverter x:Key="ParentProfileImageURLConverter" />
            <converters:ItemToIndexConverter x:Key="ItemToIndexConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <!-- Refresh On Appearing Event -->
    <ContentPage.Behaviors>
        <behaviors:EventHandlerBehavior EventName="Appearing" >
            <behaviors:InvokeCommandAction 
                    Command="{Binding RefreshCommand}" 
                    Converter="{ StaticResource DefaultReactiveUnitConverter}" />
        </behaviors:EventHandlerBehavior>
    </ContentPage.Behaviors>
    
	<ContentPage.Content>
        <!-- MAIN CONTAINER -->
        <Grid RowSpacing="0">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- APP Header -->
            <common:AppHeader 
                Grid.Row="0"
                Title="{i18n:Translate Page.Home.Title}"
                BackEnable="false"
                ProfileImage="{ Binding SelfParent.ProfileImage }">
                <common:AppHeader.Options>
                    <x:Array Type="{x:Type View}">

                        <!-- Refresh Menu Option -->
                        <common:MenuOption
                            Icon="{ x:Static helper:FontAwesomeFont.Refresh }"
                            ClickedItemCommand="{ Binding RefreshCommand }">

                            <common:MenuOption.Triggers>
                                <DataTrigger
                                    TargetType="common:MenuOption"
                                    Binding="{Binding IsBusy}"
                                    Value="True">
                                   <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                                <DataTrigger
                                    TargetType="common:MenuOption"
                                    Binding="{Binding ErrorOccurred}"
                                    Value="False">
                                    <Setter Property="IsVisible" Value="False" />
                                </DataTrigger>
                            </common:MenuOption.Triggers>

                        </common:MenuOption>

                        <!-- End Refresh Menu Option -->

                        <!-- Settings Menu Option -->

                        <common:MenuOption
                            Icon="{ x:Static helper:FontAwesomeFont.Gear }"
                            ClickedItemCommand="{ Binding GoToSettingsCommand }" />

                        <!-- End Settings Menu Option -->

                        <!-- SignOut Menu Option -->

                        <common:MenuOption
                            Icon="{ x:Static helper:FontAwesomeFont.SignOut }"
                            
                            ClickedItemCommand="{ Binding SignOutCommand }" />

                        <!-- End SignOut Menu Option -->
                    </x:Array>
                </common:AppHeader.Options>

            </common:AppHeader>
            <!-- End APP Header -->
            <!--GRID WRAPPER-->
            <Grid 
                Grid.Row="1"
                HorizontalOptions="FillAndExpand"
                VerticalOptions="FillAndExpand"
                Padding="0" 
                IsVisible="false"
                BackgroundColor="White">

                   <Grid.RowDefinitions>
                        <RowDefinition Height="150" />
                        <RowDefinition Height="*" />
                   </Grid.RowDefinitions>


                    <!-- PROFILE HEADER-->
                    <Grid 
                        Grid.Row="0"
                        Padding="0">

                        <!-- BACKGROUND IMAGE -->
                        <Image 
                            Source="{ StaticResource HomeBackground }"
                            IsOpaque="false"
                            Aspect="AspectFill"
                            HorizontalOptions="FillAndExpand"/>

                        <ScrollView
                            HorizontalOptions="Fill"
                            VerticalOptions="CenterAndExpand"
                            Orientation="Horizontal">

                            <StackLayout 
                                Orientation="Horizontal"
                                HorizontalOptions="Fill"
                                VerticalOptions="Center">

                                <StackLayout
                                    Orientation="Horizontal"
                                    Padding="10,0"
                                    Spacing="15"
                                    x:Name="ChildProfileContainer"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Start">
                                </StackLayout>


                                <common:SeeMore 
                                    HorizontalOptions="Start"
                                    VerticalOptions="Center"
                                    ClickedItemCommand="{ Binding SeeMoreCommand }"/>


                            </StackLayout>

                        </ScrollView>

                           
                    </Grid>
                    <!-- END PROFILE HEADER-->

                    <!-- ALTERNATES BODIES -->

                    <common:ActivityLoading
                        Grid.Row="1"
                        Icon="{ x:Static helper:FontAwesomeFont.Bell }"
                        IsLoading="{ Binding IsBusy }"
                        LoadingText="{i18n:Translate Common.Loading}"/>

                    <!-- No Alerts Found -->
                    <common:NoDataFound
                        Grid.Row="1"
                        IsVisible="{ Binding ShouldShowNoAlertsFound }"
                        MainText="{i18n:Translate Home.Alerts.Not.Found.MainText }"
                        DetailText="{i18n:Translate Home.Alerts.Not.Found.SecondText }">
                    </common:NoDataFound>

                     <!-- No Children Found -->

                    <templates:NoChildrenFound
                        Grid.Row="1"
                        IsVisible="{ Binding ShouldShowNoChildrenFound}"
                        VerticalOptions="CenterAndExpand"
                        Padding="20" />

                    <!-- END ALTERNATES BODIES -->

                    <!-- BODY -->
                    <Grid 
                        x:Name="AlertsBody"
                        BackgroundColor="White"
                        Grid.Row="1"
                        Padding="0">

                        <Grid.RowDefinitions>
                          <RowDefinition Height="50" />
                          <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <StackLayout
                            Grid.Row="0"
                            VerticalOptions="CenterAndExpand"
                            Orientation="Horizontal">

                            <StackLayout  
                                Orientation="Horizontal"
                                HorizontalOptions="StartAndExpand">

                                <Label
                                    FontSize="18"
                                    Style="{ StaticResource CommonHeaderStyle }"
                                    Text="{ x:Static helper:FontAwesomeFont.Refresh }"
                                    FontFamily="{ StaticResource IconsFontFamily }" />

                                <Label
                                    Style="{ StaticResource CommonHeaderStyle }"
                                    LineBreakMode="TailTruncation"
                                    Text="{ Binding ListAlertTitle }"/>

                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer 
                                        Command="{ Binding RefreshCommand }" 
                                        NumberOfTapsRequired="1" /> 
                                </StackLayout.GestureRecognizers>
                            </StackLayout>

                            <StackLayout
                                Orientation="Horizontal"
                                HorizontalOptions="End">

                                <Label
                                    FontSize="14"
                                    VerticalTextAlignment="Center"
                                    Text="{ i18n:Translate Home.Show.Alerts }"/>

                                <Label
                                    Text="{ x:Static helper:FontAwesomeFont.ArrowRight }"
                                    VerticalTextAlignment="Center"
                                    Margin="5,0,5,0"
                                    FontFamily="{ StaticResource IconsFontFamily }" />

                                <StackLayout.GestureRecognizers>
                                    <TapGestureRecognizer Command="{ Binding GoToAlertsCommand }" NumberOfTapsRequired="1" /> 
                                </StackLayout.GestureRecognizers>
                            </StackLayout>
                            
                        </StackLayout>

                        <!-- Last Alerts LIST -->
                        <ListView
                            Grid.Row="1"
                            x:Name="AlertsListView"
                            ItemsSource="{Binding AlertsPage.Alerts}"
                            RowHeight="90">

                            <ListView.Behaviors>
                                <utils:EventToCommandBehavior 
                                    EventName="ItemTapped"
                                    Command="{Binding ShowAlertDetailCommand}"
                                    EventArgsConverter="{ StaticResource ItemTappedEventArgsConverter }" />
                            </ListView.Behaviors>

                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <commonControls:SearchPageViewCellWithId 
                                        FirstApper="SearchPageViewCellWithId_OnFirstApper"
                                        FirstDisapp="SearchPageViewCellWithId_OnFirstDisapp" 
                                        ItemId="{ Binding .,
                                        Converter = { StaticResource ItemToIndexConverter },
                                        ConverterParameter = { x:Reference AlertsListView } }">
                                        <templates:AlertItemTemplate/>
                                   </commonControls:SearchPageViewCellWithId>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>

                        <Grid.Triggers>
                            <DataTrigger 
                                TargetType="Grid"
                                Binding="{Binding AlertsPage.Returned, Converter={ StaticResource ValueEqualToZeroConverter } }"
                                Value="True">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                            <DataTrigger
                                TargetType="Grid"
                                Binding="{Binding IsBusy}"
                                Value="True">
                                <Setter Property="IsVisible" Value="False" />
                            </DataTrigger>
                        </Grid.Triggers>

                    </Grid>
                    <!-- END BODY -->

                <ContentView.Triggers>
                        <MultiTrigger TargetType="Grid">
                            <MultiTrigger.Conditions>
                              <BindingCondition 
                                  Binding="{ Binding ErrorOccurred }"
                                  Value="False" />
                               <BindingCondition 
                                  Binding="{Binding IsTimeout }"
                                  Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="True" />
                       </MultiTrigger>
                </ContentView.Triggers>
            </Grid>
            <!--END GRID WRAPPER-->

            <common:ErrorOcurred 
                 Grid.Row="1"
                 IsVisible="false"
                 MainText="{i18n:Translate Home.Profile.Load.Error}">
                 <ContentView.Triggers>
                    <MultiTrigger TargetType="common:ErrorOcurred">
                        <MultiTrigger.Conditions>
                          <BindingCondition 
                              Binding="{ Binding ErrorOccurred }"
                              Value="True" />
                          <BindingCondition 
                              Binding="{Binding IsBusy }"
                              Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="True" />
                    </MultiTrigger>
               </ContentView.Triggers>
           </common:ErrorOcurred>

           <common:TimeoutOperation
                Grid.Row="1"
                IsVisible="false">
                <ContentView.Triggers>
                    <MultiTrigger TargetType="common:TimeoutOperation">
                        <MultiTrigger.Conditions>
                          <BindingCondition 
                              Binding="{ Binding ErrorOccurred }"
                              Value="False" />
                          <BindingCondition 
                              Binding="{Binding IsBusy }"
                              Value="False" />
                           <BindingCondition 
                              Binding="{Binding IsTimeout }"
                              Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="IsVisible" Value="True" />
                    </MultiTrigger>
               </ContentView.Triggers>
            </common:TimeoutOperation>

            
        </Grid>
       <!-- END MAIN CONTAINER -->
    </ContentPage.Content>
</common:BaseContentPage>

