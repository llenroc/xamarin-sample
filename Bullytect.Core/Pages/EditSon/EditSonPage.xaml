<?xml version="1.0" encoding="UTF-8"?>
<d:MvxContentPage
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    xmlns:d="clr-namespace:MvvmCross.Forms.Core;assembly=MvvmCross.Forms"
    xmlns:helper="clr-namespace:Bullytect.Core.Helpers;assembly=Bullytect.Core"
    xmlns:utils="clr-namespace:Bullytect.Core.Utils;assembly=Bullytect.Core"
    xmlns:viewModels="clr-namespace:Bullytect.Core.ViewModels;assembly=Bullytect.Core"
    xmlns:i18n="clr-namespace:Bullytect.Core.I18N"
    xmlns:converters="clr-namespace:Bullytect.Core.Converters"
    xmlns:common="clr-namespace:Bullytect.Core.Pages.Common"
    xmlns:behaviors="clr-namespace:Behaviors;assembly=Behaviors"
    xmlns:templates="clr-namespace:Bullytect.Core.Pages.EditSon.Templates"
    xmlns:commonTemplates="clr-namespace:Bullytect.Core.Pages.Common.Templates"
    xmlns:extended="clr-namespace:Bullytect.Core.Pages.Common.Extended"
    xmlns:artina="clr-namespace:UXDivers.Artina.Shared;assembly=UXDivers.Artina.Shared"
    xmlns:controls="clr-namespace:Refractored.XamForms.PullToRefresh;assembly=Refractored.XamForms.PullToRefresh"
    x:Class="Bullytect.Core.Pages.EditSon.EditSonPage"
    x:TypeArguments="viewModels:EditSonViewModel"
    x:Name="Root">
    <ContentPage.Resources>
           <ResourceDictionary>
                <converters:ContainsKeyVisibilityConverter x:Key="ContainsKeyVisibilityConverter"/>
                <converters:ValidationErrorFormatValueConverter x:Key="ValidationErrorFormatValueConverter"/>
                <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
                <converters:SocialMediaFormatValueConverter x:Key="SocialMediaFormatValueConverter" />
                <converters:SwitchChangeEventArgsConverter x:Key="SwitchChangeEventArgsConverter" />
                <x:String x:Key="firstNameKey">firstName</x:String>
                <x:String x:Key="lastNameKey">lastName</x:String>
                <x:String x:Key="schoolKey">school</x:String>
                <x:String x:Key="facebookKey">FACEBOOK</x:String>
                <x:String x:Key="instagramKey">INSTAGRAM</x:String>
                <x:String x:Key="youtubeKey">YOUTUBE</x:String>
            </ResourceDictionary>
    </ContentPage.Resources>
	<ContentPage.Content>


        <!-- MAIN CONTAINER -->
        <Grid RowSpacing="0" x:Name="Parent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!-- CUSTOM NAVBAR -->
            <templates:EditSonHeader Grid.Row="0" x:Name="Header" />


            <controls:PullToRefreshLayout
                Grid.Row="1"
                x:Name="RefreshLayout"
                RefreshCommand="{Binding RefreshCommand}"
                IsRefreshing="{Binding IsBusy}"
                RefreshColor="{DynamicResource BasePageColor}">

                <StackLayout 
                    Padding="20" 
                    VerticalOptions="FillAndExpand">



                    <extended:TableViewWithoutBorders VerticalOptions="Start">
                        <TableView.Root>

                            <TableSection Title="{i18n:Translate EditSon.General.Section.Title}" > 

                                <!-- Profile Image -->

                               <ImageCell 
                                    Command="{ Binding TakePhotoCommand }"
                                    ImageSource="{ StaticResource ThemeAvatarSample0Image }"
                                    Text="{i18n:Translate EditSon.General.Change.Profile.Image }"
                                    TextColor="{ DynamicResource BaseTextColor }"/>


                                <!-- Firstname -->
                                <extended:ExtendedViewCell SeparatorColor="Transparent" SeparatorPadding="10">

                                    <StackLayout>

                                        <Entry
                                            Placeholder="{ i18n:Translate Common.Placeholder.Firstname }"
                                            VerticalOptions="StartAndExpand"
                                            Style="{StaticResource ArtinaProfileEntryStyle}"
                                            Text="{ Binding CurrentSon.FirstName }"/>
                                        <Label
                                            Text="{Binding Path=FieldErrors,  
                                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                                ConverterParameter={StaticResource firstNameKey}}"
                                            IsVisible="{Binding Path=FieldErrors, 
                                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                                ConverterParameter={StaticResource firstNameKey}}"
                                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                                    </StackLayout>

                               </extended:ExtendedViewCell>

                                <!-- Lastname -->
                                <extended:ExtendedViewCell SeparatorColor="Transparent" SeparatorPadding="10">

                                    <StackLayout>
                                        <Entry
                                            Placeholder="{ i18n:Translate Common.Placeholder.LastName }"
                                            VerticalOptions="StartAndExpand"
                                            Style="{StaticResource ArtinaProfileEntryStyle}"
                                            Text="{ Binding CurrentSon.Lastname }"/>
                                        <Label
                                            Text="{Binding Path=FieldErrors,  
                                                Converter={StaticResource ValidationErrorFormatValueConverter},
                                                ConverterParameter={StaticResource lastNameKey}}"
                                            IsVisible="{Binding Path=FieldErrors, 
                                                Converter={StaticResource ContainsKeyVisibilityConverter},
                                                ConverterParameter={StaticResource lastNameKey}}"
                                                Style="{StaticResource ValidationEntryErrorStyle}"></Label>
                                    </StackLayout>

                               </extended:ExtendedViewCell>

                               <extended:ExtendedViewCell SeparatorColor="Transparent" SeparatorPadding="10">

                                    <Picker ItemsSource="{Binding Schools}" />
                                </extended:ExtendedViewCell>


                                
                            </TableSection>

                            <TableSection Title="{i18n:Translate EditSon.RRSS.Section.Title}"> 

                                <!-- Facebook Switch Cell -->
                                <extended:ExtendedViewCell SeparatorColor="{ DynamicResource AccentColor }" SeparatorPadding="5">
                                    <Grid ColumnSpacing="10" Padding="5">
                                    
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>


                                        <StackLayout
                                            Grid.Column="0"
                                            Orientation="Horizontal"
                                            VerticalOptions="Center"
                                            HorizontalOptions="Start"
                                            Spacing="0">
                                            
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Start"
                                                    Text="{ x:Static helper:FontAwesomeFont.Facebook }"
                                                    FontFamily="{ StaticResource IconsFontFamily }"
                                                    TextColor="{ DynamicResource AccentColor }">

                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 

                                                </Label>
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Start"
                                                    Text="{i18n:Translate Common.RRSS.Facebook}"
                                                    TextColor="{ DynamicResource AccentColor }">
                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 
                                                </Label>
                                            
                                        </StackLayout>


                                        <Switch VerticalOptions="Center" HorizontalOptions="End" Grid.Column="1" IsToggled="{Binding Path=CurrentSocialMedia,  
                                                Converter={StaticResource SocialMediaFormatValueConverter},
                                                ConverterParameter={StaticResource facebookKey}}">

                                                <Switch.Behaviors>
                                                    <behaviors:EventHandlerBehavior EventName="Toggled">
                                                        <behaviors:InvokeCommandAction 
                                                                Command="{Binding ToggleFacebookSocialMediaCommand}"
                                                                Converter="{StaticResource SwitchChangeEventArgsConverter}"/>
                                                    </behaviors:EventHandlerBehavior>
                                                </Switch.Behaviors>
                                        </Switch>



                                    </Grid>

                                </extended:ExtendedViewCell>

                                <!-- Instagram Switch Cell -->
                                <extended:ExtendedViewCell SeparatorColor="{DynamicResource AccentColor}" SeparatorPadding="5">
                                    <Grid ColumnSpacing="10" Padding="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <StackLayout
                                            Grid.Column="0"
                                            Orientation="Horizontal"
                                            VerticalOptions="Center"
                                            HorizontalOptions="Start"
                                            Spacing="0">
                                            
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Start"
                                                    Text="{ x:Static helper:FontAwesomeFont.Instagram }"
                                                    FontFamily="{ StaticResource IconsFontFamily }"
                                                    TextColor="{ DynamicResource AccentColor }">

                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 

                                                </Label>
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Start"
                                                    Text="{i18n:Translate Common.RRSS.Instagram}"
                                                    TextColor="{ DynamicResource AccentColor }">
                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 
                                                </Label>
                                            
                                        </StackLayout>

                                        <Switch Grid.Column="1"  VerticalOptions="Center" HorizontalOptions="End" IsToggled="{Binding Path=CurrentSocialMedia,  
                                                Converter={StaticResource SocialMediaFormatValueConverter},
                                                ConverterParameter={StaticResource instagramKey}}">

                                                <Switch.Behaviors>
                                                    <behaviors:EventHandlerBehavior EventName="Toggled">
                                                        <behaviors:InvokeCommandAction 
                                                                Command="{Binding ToggleInstagramSocialMediaCommand}"
                                                                Converter="{StaticResource SwitchChangeEventArgsConverter}"/>
                                                    </behaviors:EventHandlerBehavior>
                                                </Switch.Behaviors>
                                        </Switch>



                                    </Grid>
                                </extended:ExtendedViewCell>

                                <!-- Youtube -->
                                <extended:ExtendedViewCell SeparatorColor="{DynamicResource AccentColor}" SeparatorPadding="5">
                                    <Grid ColumnSpacing="10" Padding="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <StackLayout
                                            Grid.Column="0"
                                            Orientation="Horizontal"
                                            VerticalOptions="Center"
                                            HorizontalOptions="Start"
                                            Spacing="0">
                                            
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Center"
                                                    Text="{ x:Static helper:FontAwesomeFont.Youtube }"
                                                    FontFamily="{ StaticResource IconsFontFamily }"
                                                    TextColor="{ DynamicResource AccentColor }">

                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 

                                                </Label>
                                                <Label
                                                    VerticalTextAlignment="Center"
                                                    HorizontalTextAlignment="Start"
                                                    Text="{i18n:Translate Common.RRSS.Youtube}"
                                                    TextColor="{ DynamicResource AccentColor }">
                                                    <Label.FontSize>
                                                        <OnIdiom 
                                                            x:TypeArguments="x:Double" 
                                                            Phone="15" 
                                                            Tablet="20" />
                                                    </Label.FontSize> 
                                                </Label>
                                            
                                        </StackLayout>
                                        
                                    
                                        <Switch Grid.Column="1"  VerticalOptions="Center" HorizontalOptions="End" IsToggled="{Binding Path=CurrentSocialMedia,  
                                                Converter={StaticResource SocialMediaFormatValueConverter},
                                                ConverterParameter={StaticResource youtubeKey}}">

                                                <Switch.Behaviors>
                                                    <behaviors:EventHandlerBehavior EventName="Toggled">
                                                        <behaviors:InvokeCommandAction 
                                                                Command="{Binding ToggleYoutubeSocialMediaCommand}"
                                                                Converter="{StaticResource SwitchChangeEventArgsConverter}"/>
                                                    </behaviors:EventHandlerBehavior>
                                                </Switch.Behaviors>
                                        </Switch>



                                    </Grid>
                                </extended:ExtendedViewCell>
                            </TableSection>

                            
                        </TableView.Root>
                    </extended:TableViewWithoutBorders>

                    
                    <artina:Button 
                        IsEnabled="{Binding HaveInternet}"
                        Command="{ Binding SaveChangesCommand }"
                        Style="{StaticResource SaveButtonStyle}" 
                        Text="{ i18n:Translate Common.Btn.Save.Changes }" />

                </StackLayout>



                <controls:PullToRefreshLayout.Triggers>
                    <DataTrigger 
                        TargetType="controls:PullToRefreshLayout" 
                        Binding="{Binding IsBusy}"
                        Value="True">
                        <Setter Property="IsPullToRefreshEnabled" Value="False" />
                    </DataTrigger>
                    <DataTrigger 
                        TargetType="controls:PullToRefreshLayout" 
                        Binding="{Binding SonToEdit}"
                        Value="null">
                        <Setter Property="IsPullToRefreshEnabled" Value="False" />
                    </DataTrigger>
                </controls:PullToRefreshLayout.Triggers>

           </controls:PullToRefreshLayout>

        </Grid>

	</ContentPage.Content>
</d:MvxContentPage>
